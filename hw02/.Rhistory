dat[dat$height == 87, c('Player')]
dat[dat$height == 87, 'Player']
dat[dat$height == '87', 'Player']
dat[dat$height == 87, 'Player']
dat[dat$height == 87, 'player']
dat[dat@height == 69, 'player']
dat[dat$height == 69, 'player']
attributes(dat$team)
unique(dat$team)
un_teams <- unique(dat$team)
un_teams
len(un_teams)
length(un_teams)
old_age <- max(dat$age)
dat[dat$age == old_age, 'player']
median(dat$salary)
tens = dat[dat$experience > 10, ]
median(tens$salary)
tens = dat[dat$experience >= 10, ]
median(tens$salary)
guards = dat[dat$position == 'SG' ! 'PG']
guards = dat[dat$position == 'SG' ~ 'PG']
guards = dat[dat$position == 'SG' | 'PG']
guards = dat[dat$position == 'SG' | 'PG', ]
guards = dat[dat$position == 'SG' | position == 'PG', ]
median(guards$salary)
guards <- dat[dat$position == 'SG' | position == 'PG', ]
median(guards$salary)
weird <- dat[dat$position == 'PF' & age >= 29 & height <= 74, ]
weird <- dat[dat$position == 'PF' ! age >= 29 ! height <= 74, ]
weird <- dat[dat$position == 'PF' & age >= 29 & height <= 74, ]
weird <- dat[dat$position == 'PF' & dat$age >= 29 & dat$height <= 74, ]
median(weird$salary)
fours <- dat[dat$points <= 4, ]
fours <- dat[dat$points <= 4, ]
fours
fours <- dat[dat$points <= 4, ]
length(fours)
fours <- dat[dat$points <= 4, 'player']
length(fours)
fours
zero <- dat[dat$points == 0, 'player']
zero
dat[dat$college == 'University of California, Berkeley']
dat[dat$college == 'University of California, Berkeley', ]
length(dat[dat$college == 'University of California, Berkeley', ])
length(dat[dat$college == 'University of California, Berkeley', 'player'])
length(dat[dat$college == 'University of Notre Dame', 'player'])
dat[dat$college == 'University of Notre Dame', 'player']
length(dat[dat$weight > 260], 'player')
length(dat[dat$weight > 260, 'player'])
length(dat[dat$weight > 260, 'player'])
dat[dat$weight > 260, 'player']
dat$college
dat[dat$college == "", 'player']
length(dat[dat$college == "", 'player'])
ppm <- dat$points / dat$minutes
ppm <- dat$points / dat$minutes
ppm <- dat$points / dat$minutes
dat$points_minute <- ppm
dat
ppm <- dat$points / dat$minutes
max_ppm <- max(ppm)
dat$points_minute <- ppm
dat[dat$points_minute == max_ppm, 'player']
tpm <- dat$points3 / dat$minutes
max_tpm <- max(tpm)
dat$threes_minutes <- tpm
dat[dat$threes_minutes == max_tpm, 'player']
twopm <- dat$points2 / dat$minutes
max_twopm <- max(twopm)
dat$twos_minutes <- twopm
dat[dat$two_minutes == max_twopm, 'player']
twopm <- dat$points2 / dat$minutes
max_twopm <- max(twopm)
dat$twos_minutes <- twopm
dat[dat$two_minutes == max_twopm, ]
tpm <- dat$points3 / dat$minutes
max_tpm <- max(tpm)
dat$threes_minutes <- tpm
dat[dat$threes_minutes == max_tpm, 'player']
twopm <- dat$points2 / dat$minutes
max_twopm <- max(twopm)
dat$twos_minutes <- twopm
dat[dat$two_minutes == max_twopm, ]
twopm <- dat$points2 / dat$minutes
max_twopm <- max(twopm)
dat$twos_minutes <- twopm
dat[dat$twos_minutes == max_twopm, 'player']
onepm <- dat$points1 / dat$minutes
max_onepm <- max(onepm)
dat$ones_minutes <- onepm
dat[dat$ones_minutes == max_onepm, 'player']
gsw <- dat[dat$team == 'GSW', c('player', 'height', 'weight')]
gsw
sort(gsw$height, decreaseing = FALSE)
sort(gsw$height, decreasing = FALSE)
order(gsw$height, decreasing = TRUE)
sort(gsw$height, decreasing = TRUE)
gsw[order(gsw$height), ]
gsw[order(gsw$height), decreasing = TRUE]
gsw[order(gsw$height), ]
gsw[order(gsw$weight, decreasing = TRUE), ]
dat[order(dat$salary, decreasing = TRUE), c('player', 'team', 'salary')]
moneyed <- dat[order(dat$salary, decreasing = TRUE), c('player', 'team', 'salary')]
moneyed(1:5, )
moneyed <- dat[order(dat$salary, decreasing = TRUE), c('player', 'team', 'salary')]
moneyed[1:5, ]
threes <- dat[order(dat$points3, decreasing = TRUE), c('player', 'team', 'salary')]
threes[1:10, ]
aggregate(dat$salary, by = list(dat$team), FUN = median)
aggregate(salary ~ team, data = dat, FUN = median)
aggregate(dat[ ,c('height', 'weight')], by = list(dat$position), FUN = mean)
aggregate(. ~ position, data = dat[ ,c('position', 'height', 'weight')],
FUN = mean)
aggregate(dat[, c('height', 'weight', 'age')], by = list(dat$position), FUN = mean)
aggregate(dat[, c('height', 'weight', 'age')], by = list(dat$team), FUN = mean)
aggregate(dat[, c('height', 'weight', 'age')], by = list(dat$team, dat$position), FUN = mean)
agg_one <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = min)
agg_one <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = min)
agg_one
agg_one <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = min)
agg_two <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = median)
agg_three <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = mean)
agg_four <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = max)
aggs_one <- merge(agg_one, agg_two)
aggs_one
agg_one <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = min)
agg_two <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = median)
agg_three <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = mean)
agg_four <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = max)
aggs_one <- merge(agg_one, agg_two, by = c('team', 'position'))
agg_one <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = min)
agg_two <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = median)
agg_three <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = mean)
agg_four <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = max)
#aggs_one <- merge(agg_one, agg_two, by = c('team', 'position'))
agg_one
agg_one <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = min)
agg_two <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = median)
agg_three <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = mean)
agg_four <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = max)
aggs_one <- merge(agg_one, agg_two, by = c('Group.1', 'Group.2'))
aggs_one
agg_one <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = min)
agg_two <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = median)
agg_three <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = mean)
agg_four <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = max)
aggs_one <- merge(agg_one, agg_two, by = c('Group.1', 'Group.2'))
aggs_two <- merge(aggs_one, agg_three, by = c('Group.1', 'Group.2'))
aggs_two
agg_one <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = min)
agg_two <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = median)
agg_three <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = mean)
agg_four <- aggregate(dat$salary, by = list(dat$team, dat$position), FUN = max)
aggs_one <- merge(agg_one, agg_two, by = c('Group.1', 'Group.2'))
aggs_two <- merge(aggs_one, agg_three, by = c('Group.1', 'Group.2'))
aggs_three <- merge(aggs_two, agg_four, by = c('Group.1', 'Group.2'))
aggs_three
guards <- dat[dat$position == 'SG' | position == 'PG', ]
median(guards$salary)
guards <- dat[dat$position == 'SG' | dat$position == 'PG', ]
median(guards$salary)
knitr::opts_chunk$set(echo = TRUE)
chooseCRANmirror(ind=47)
n <- length(points)
n
mean_points <- 1 / n * sum(points)
mean_points
mean_salary <- 1 / n * sum(salary_mils)
mean_salary
var_points <- (1 / (n - 1)) * sum((points - mean_points) ^ 2)
var_points
var_salary <- (1 / (n - 1)) * sum((salary_mils - mean_salary) ^ 2)
var_salary
sd_points <- sqrt(var_points)
sd_points
sd_salary <- sqrt(var_salary)
sd_salary
cov_points_sal <- (1 / (n - 1)) * sum((points - mean_points) * (salary_mils - mean_salary))
cov_points_sal
cor_points_sal <- cov_points_sal / (sd_points * sd_salary)
cor_points_sal
b_one <- cor_points_sal * sd_salary / sd_points
b_one
b_zero <- mean_salary - b_one * mean_points
b_zero
y_hat <- b_zero + b_one * points
summary(y_hat)
predicted <- 1.51 + 0.009 * points
residuals <- salary_mils - predicted
rss <- sum((residuals) ^ 2)
rss
tss <- sum((salary_mils - mean_salary) ^ 2)
tss
r_squared <- 1 - (rss / tss)
r_squared
install.packages(c("dplyr", "ggplot2"))
library(dplyr)
library(ggplot2)
dat <- read_csv('nba2017-players.csv')
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
csv <- "data/nba2017-players.csv"
download.file(url = paste0(github, csv), destfile = 'nba2017-players.csv')
dat <- read.csv('nba2017-players.csv', stringsAsFactors = FALSE)
three_rows <- slice(dat, 1:30)
three_rows
gt_85 <- filter(dat, height > 85)
gt_85
knitr::opts_chunk$set(echo = TRUE)
first_5 <- slice(dat, 1:5)
first_5
three_rows <- slice(dat, 1:3)
five_rows <- slice(dat, 1:5)
five_rows
five_rows <- slice(dat, 1:5)
five_rows
by_fives <- slice(dat, c(10, 15, 20, 25, 30, 35, 40, 45, 50))
by_fives
length(dat)
nrow(dat)
five_rows <- slice(dat, 1:5)
five_rows
by_fives <- slice(dat, c(10, 15, 20, 25, 30, 35, 40, 45, 50))
by_fives
last_five <- slice(dat, 337:441)
last_five
five_rows <- slice(dat, 1:5)
five_rows
by_fives <- slice(dat, c(10, 15, 20, 25, 30, 35, 40, 45, 50))
by_fives
last_five <- slice(dat, 437:441)
last_five
below_seventy <- filter(dat, height < 70)
below_seventy
below_seventy <- filter(dat, height < 70)
below_seventy
warriors <- filter(dat, team == 'GSW')
warriors
below_seventy <- filter(dat, height < 70)
below_seventy
warriors <- filter(dat, team == 'GSW')
warriors
gsw_centers <- filter(warriors, position == 'C')
gsw_centers
# don't forget to load the packages
library(dplyr)
library(ggplot2)
dat <- read.csv('../data/nba2017-players.csv', stringsAsFactors = FALSE)
# download RData file into your working directory
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
csv <- "data/nba2017-players.csv"
download.file(url = paste0(github, csv), destfile = 'nba2017-players.csv')
dat <- read.csv('../data/nba2017-players.csv', stringsAsFactors = FALSE)
# with "base" read.csv()
dat <- read.csv('nba2017-players.csv', stringsAsFactors = FALSE)
# with "readr" read_csv()
#dat <- read_csv('nba2017-players.csv')
# first three rows
three_rows <- slice(dat, 1:3)
three_rows
# subset rows given a condition
# (height greater than 85 inches)
gt_85 <- filter(dat, height > 85)
gt_85
# columns by name
player_height <- select(dat, player, height)
five_rows <- slice(dat, 1:5)
five_rows
by_fives <- slice(dat, c(10, 15, 20, 25, 30, 35, 40, 45, 50))
by_fives
last_five <- slice(dat, 437:441)
last_five
below_seventy <- filter(dat, height < 70)
below_seventy
warriors <- filter(dat, team == 'GSW')
warriors
gsw_centers <- filter(warriors, position == 'C')
gsw_centers
lakers <- filter(dat, team == 'LAL')
select(lakers, player)
gsw_pg <- filter(warriors, position == 'PG')
select(gsw_pg, player, salary)
old_guys <- filter(dat, experience > 10)
old_poor_guys <- filter(old_guys, salary <= 10000000)
old_guys <- filter(dat, experience > 10)
old_poor_guys <- filter(old_guys, salary <= 10000000)
select(old_poor_guys, player, age, team)
rookie_players <- filter(dat, experience == 0)
rookie_players <- filter(rookie_players, age == 20)
rookie_data <- select(rookie_players, player, team, height, weight)
slice(rookie_data, 1:5)
# creating a small data frame step by step
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
mutate(gsw, height / weight)
mutate(gsw, ht_wt = height / weight)
gsw2 <- mutate(gsw, ht_m = height * 0.0254, wt_kg = weight * 0.4536)
gsw2
# order rows by height (increasingly)
arrange(gsw, height)
# order rows by height (decreasingly)
arrange(gsw, desc(height))
# order rows by height, and then weight
arrange(gsw, height, weight)
mutate(gsw, product == height * weight)
mutate(gsw, product = height * weight)
gsw3 <- mutate(gsw, log_height = log(height), log_weight = log(weight))
gsw3
shorties <- filter(dat, height < 71)
arrange(shorties, height)
rich_ones <- arrange(dat, desc(salary))
rich_ones
rich_ones <- arrange(dat, desc(salary))
select(rich_ones, player, team, salary)
rich_ones <- arrange(dat, desc(salary))
those_rich_ones <- select(rich_ones, player, team, salary)
slice(those_rich_ones, 1:5)
three_kings <- arrange(dat, desc(points3))
select(three_kings, player, team, points3)
three_kings <- arrange(dat, desc(points3))
three_men <- select(three_kings, player, team, points3)
slice(three_men, 1:10)
gsw_mpg <- mutate(gsw, min_per_game = minutes / games)
gsw_guys <- filter(dat, team == 'GSW')
gsw_mpg <- mutate(gsw_guys, min_per_game = minutes / games)
gsw_mpg
gsw_guys <- filter(dat, team == 'GSW')
gsw_mpg <- mutate(gsw_guys, min_per_game = minutes / games)
gsw_mpg <- select(gsw_mpg, player, experience, min_per_game)
gsw_mpg <- arrange(gsw_mpg, desc(min_per_game))
gsw_mpg
# average salary of NBA players
summarise(dat, avg_salary = mean(salary))
mean(dat$salary)
# some stats for salary (dplyr)
summarise(
dat,
min = min(salary),
median = median(salary),
avg = mean(salary),
max = max(salary)
)
# some stats for salary (base R)
c(min = min(dat$salary),
median = median(dat$salary),
median = mean(dat$salary),
max = max(dat$salary))
# average salary, grouped by team
summarise(
group_by(dat, team),
avg_salary = mean(salary)
)
# average salary, grouped by position
summarise(
group_by(dat, position),
avg_salary = mean(salary)
)
arrange(
summarise(
group_by(dat, position),
avg_height = mean(height),
avg_weight = mean(weight)),
desc(avg_height)
)
summarise(dat, max_height = max(height))
summarise(dat, sd3 = sd(points3))
summarise(group_by(dat, team), median_threes = median(points3))
avg_threes <- summarise(group_by(dat, team), mean_threes = mean(points3))
avg_threes
avg_threes <- summarise(group_by(dat, team), mean_threes = mean(points3))
arrange(avg_threes, desc(mean_threes)
avg_threes <- summarise(group_by(dat, team), mean_threes = mean(points3))
arrange(avg_threes, desc(mean_threes))
avg_threes <- summarise(group_by(dat, team), mean_threes = mean(points3))
sort_threes <- arrange(avg_threes, mean_threes)
slice(sort_threes, 1:5)
middle_aged <- filter(dat, experience >= 5)
middle_aged <- filter(middle_aged, experience <= 10)
middle_aged
middle_aged <- filter(dat, experience >= 5)
middle_aged <- filter(middle_aged, experience <= 10)
middle_aged_pf <- filter(middle_aged, position == 'PF')
middle_aged_pf
middle_aged <- filter(dat, experience >= 5)
middle_aged <- filter(middle_aged, experience <= 10)
middle_aged_pf <- filter(middle_aged, position == 'PF')
summarise(middle_aged_pf, mean_age = mean(age), sd_age = sd(age))
# scatterplot (option 1)
ggplot(data = dat) +
geom_point(aes(x = points, y = salary))
# scatterplot (option 2)
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point()
# colored scatterplot
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position))
# sized and colored scatterplot
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position, size = points3))
# sized and colored scatterplot
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position, size = points3), alpha = 0.7)
ggplot(data = gsw, aes(x = height, y = weight))
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point()
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(players)
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(mapping = players)
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(mapping = player)
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(aes(mapping = player))
ggplot(data = gsw, aes(x = height, y = weight, label = player)) + geom_point() + geom_text()
ggplot(data = gsw, aes(x = height, y = weight, label = player)) + geom_label() + geom_point()
gsw_all <- filter(dat, team == 'GSW')
ggplot(data = gsw_all, aes(x = height, y = weight, label = player)) + geom_label() + geom_point()
ggplot(data = dat, aes(x = salary)) + geom_density
ggplot(data = dat, aes(x = salary)) + geom_density()
ggplot(data = dat, aes(x = points2)) + geom_histogram(binwidth = 50)
ggplot(data = dat, aes(x = position)) + geom_freqpoly()
ggplot(data = dat, aes(x = position)) + geom_histogram(y = ..count)
ggplot(data = dat, aes(x = position)) + geom_histogram(aes(y = ..count))
ggplot(data = dat, aes(x = position)) + geom_histogram(aes(y = ..count..))
ggplot(data = dat, aes(x = position)) + geom_histogram(stat = 'count')
centers <- filter(dat, position == 'C')
ggplot(data = centers, aes(x = experience, y = salary)) + geom_point()
centers <- filter(dat, position == 'C')
ggplot(data = centers, aes(x = experience, y = salary)) + geom_point() + geom_smooth()
centers <- filter(dat, position == 'C')
ggplot(data = centers, aes(x = experience, y = salary)) + geom_point() + geom_smooth(method = 'lm')
ggplot(data = centers, aes(x = experience, y = salary)) + geom_point() + geom_smooth()
ggplot(data = centers, aes(x = experience, y = salary)) + geom_point() + geom_smooth(method = 'loess')
# scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point() +
facet_wrap(~ position)
# scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position), alpha = 0.7) +
facet_grid(~ position) +
geom_smooth(method = loess)
# scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position), alpha = 0.7) +
facet_grid(position ~ .) +
geom_smooth(method = loess)
ggplot(data = dat, aes(x = experience, y = salary)) + geom_point() + facet_wrap(~ position)
ggplot(data = dat, aes(x = experience, y = salary)) + geom_point() + facet_wrap(~ team)
ggplot(data = dat, aes(x = age)) + geom_histogram(stat = 'count') + facet_wrap(~ team)
ggplot(data = dat, aes(x = height, y = weight) + geom_point() + facet_wrap(~ position)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + facet_wrap(~ position)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_density2d() + facet(~ position)
ggplot(data = dat, aes(x = height, y = weight)) + geom_point() + geom_density2d() + facet_wrap(~ position)
# download RData file into your working directory
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
csv <- "data/nba2017-players.csv"
download.file(url = paste0(github, csv), destfile = 'nba2017-players.csv')
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
file <- "data/nba2017-player-statistics.csv"
csv <- paste0(github, file)
download.file(url = csv, destfile = "nba2017-player-statistics.csv")
knitr::opts_chunk$set(echo = TRUE)
install.packages(dplyr)
library(dplyr)
install.packages(readr)
library(readr)
install.packages("dplyr")
library(dplyr)
install.packages("readr")
library(readr)
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
choosecranmirror()
chooseCRANmirror()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
chooseCRANmirror(ind = 50)
require(readr)
install.packages("readr")
library(readr)
install.packages('ggplot2')
install.packages("readr")
knitr::opts_chunk$set(echo = TRUE)
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
file <- "data/nba2017-player-statistics.csv"
csv <- paste0(github, file)
download.file(url = csv, destfile = 'nba2017-player-statistics.csv')
base <- read.csv("nba2017-player-statistics.csv", header = TRUE, colClasses = c('character', 'character', 'factor', 'character', 'double', rep('integer', 19) ))
str(base)
readr <- read_csv("nba2017-player-statistics.csv", col_types = list(Player = 'c', Team = 'c', Position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG')), Experience = 'c', Salary = 'n', Rank = 'i', Age = 'i', GP = 'i', GS = 'i', MIN = 'i', FGM = 'i', FGA = 'i', Points3 = 'i', Points3_atts = 'i', Points2 = 'i', Points2_atts = 'i', FTM = 'i', FTA = 'i', OREB = 'i', DREB = 'i', AST = 'i', STL = 'i', BLK = 'i', TO = 'i'))
install.packages('dplyr')
library(dplyr)
readr <- read_csv("nba2017-player-statistics.csv", col_types = list(Player = 'c', Team = 'c', Position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG')), Experience = 'c', Salary = 'n', Rank = 'i', Age = 'i', GP = 'i', GS = 'i', MIN = 'i', FGM = 'i', FGA = 'i', Points3 = 'i', Points3_atts = 'i', Points2 = 'i', Points2_atts = 'i', FTM = 'i', FTA = 'i', OREB = 'i', DREB = 'i', AST = 'i', STL = 'i', BLK = 'i', TO = 'i'))
experience <- replace(base$experience, base$experience=="R", 0)
experience <- as.integer(base$experience)
experience
base$Experience[base$Experience=='R'] <- 0
readr$Experience[readr$Experience=='R'] <- 0
Missed_FG <- base$FGA - base$FGM
base <- mutate(base, Missed_FG = Missed_FG)
Missed_FT <- base$FTA - base$FTM
base <- mutate(base, Missed_FT = Missed_FT)
pts <- 2 * base$Points2 + 3 * base$Points3 + base$FTM
base <- mutate(base, PTS = pts)
reb <- base$OREB + base$DREB
base <- mutate(base, REB = reb)
mpg <- base$MIN / base$GP
base <- mutate(base, MPG = mpg)
eff <- (pts + reb + base$AST + base$STL + base$BLK - Missed_FG - Missed_FT - base$TO) / base$GP
base <- mutate(base, EFF = eff)
summary(eff)
ggplot(data = base, aes(x = EFF)) + geom_histogram(binwidth = 5)
